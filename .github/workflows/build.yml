name: Create and publish a Docker image

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AEM_SDK_VERSION: 2024.10.18459.20241031T210302Z-241000

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache SDK
        uses: actions/cache@v4
        with:
          path: aem-sdk-artifacts
          key: aem-sdk-${{ env.AEM_SDK_VERSION }}.zip
      - name: Checkout AEM SDK artifacts repository
        uses: actions/checkout@v4
        with:
          repository: orbinson/aem-sdk-artifacts
          ref: main
          lfs: true
          token: ${{ secrets.PRIVATE_TOKEN }}
          path: aem-sdk-artifacts
      - name: Pull SDK
        run: |
          cd aem-sdk-artifacts
          ls -la
          git lfs pull --include="aem-sdk-${{ env.AEM_SDK_VERSION }}.zip"
          ls -la
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          platforms: linux/amd64,linux/arm64
#          labels: ${{ steps.meta.outputs.labels }}
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v1
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true

